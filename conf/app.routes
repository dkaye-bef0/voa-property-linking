# microservice specific routes

GET         /property-representations/:representationId        controllers.PropertyRepresentationController.get(representationId)
GET         /property-representations/agent/:agentId           controllers.PropertyRepresentationController.forAgent(agentId)
GET         /property-representations/linkId/:linkId           controllers.PropertyRepresentationController.find(linkId)

PUT         /property-representations/create                   controllers.PropertyRepresentationController.create()

PUT         /property-representations/update                   controllers.PropertyRepresentationController.update()
PUT         /property-representations/accept/:reprId           controllers.PropertyRepresentationController.accept(reprId)
PUT         /property-representations/reject/:reprId           controllers.PropertyRepresentationController.reject(reprId)

POST        /property-links/:submissionId                      controllers.PropertyLinkingController.create(submissionId)
GET         /property-links/:organisationId                    controllers.PropertyLinkingController.find(organisationId: Int)
GET         /property-link/:linkId                             controllers.PropertyLinkingController.get(linkId)
GET         /dashboard/assessments/:uarn                       controllers.PropertyLinkingController.assessments(uarn: Long)

GET         /individuals/:ggId                                 controllers.IndividualAccountController.getByGGId(ggId)
POST        /individuals                                       controllers.IndividualAccountController.create()

GET         /groups/:id                                        controllers.GroupAccountController.getByGGId(id)
GET         /groups/agentCode/:agentCode                       controllers.GroupAccountController.withAgentCode(agentCode)
POST        /groups                                            controllers.GroupAccountController.create()

GET         /properties/:uarn                                  controllers.PropertyDetailsController.getPropertyInfo(uarn: Long)

PUT         /envelopes/:envId                                  @controllers.EnvelopeController.create(envId: String)
GET         /envelopes                                         @controllers.EnvelopeController.get()
GET         /transfer                                          @controllers.FileTransferController.run()

GET         /address                                           controllers.AddressLookup.find(postcode)
GET         /address/:id                                       controllers.AddressLookup.get(id: Int)
POST        /address                                           controllers.AddressLookup.create